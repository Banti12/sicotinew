{"ast":null,"code":"import { LOGIN } from '../constan';\nimport { LOGIN_ERROR } from '../constan';\nimport axios from \"axios\";\n/*export const LoginAction = (payload) => {\r\n    return (dispatch)=>{\r\n        //let result={...payload};\r\n        //dispatch({ type: LOGIN, payload: result });\r\n        //console.log(payload)\r\n        /*Axios.get(`https://anypoint.mulesoft.com/mocking/api/v1/sources/exchange/assets/d4788f6c-c024-43ee-8253-b139c8997e9e/usuarios/1.0.0/m/usuarios?usuario=${payload.usuario}&contrasena=${payload.contrasena}`)\r\n        Axios.get('http://jsonplaceholder.typicode.com/posts')\r\n        .then(response=>{\r\n            console.log(response.data)\r\n            dispatch({ type: LOGIN, payload: response.data });\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: LOGIN_ERROR, payload: 'No se encontro el usuario'})\r\n        });\r\n    }\r\n}*/\n\nconst login = (payload, userData) => {\n  return {\n    type: LOGIN,\n    userDetails: { ...payload\n    },\n    userData: userData,\n    success: true\n  };\n};\n\nexport const LoginAction = payload => (dispatch, getState) => {\n  return new Promise((resolve, reject) => {\n    const baseUri = \"https://private-117dfb-logeo.apiary-mock.com/usuarios\";\n    const data = {\n      usuario: \"user\",\n      contrasena: \"pass\"\n    };\n    axios.post(baseUri, data).then(res => {\n      return res.data;\n    }).then(res => {\n      if (res.esActivo === true) {\n        // cookies.set(\"usuario\", res.usuario, { path: \"/\" });\n        window.location.href = \"./home\";\n      } else {\n        alert(\"Las credenciales son invalidas. Revisa con el administrador.\");\n      }\n    }).catch(err => {\n      alert(\"Ocurrio un error de conexión: \" + err);\n    });\n  });\n};","map":{"version":3,"sources":["C:/Code/app-evaluaciones-tih/front/src/redux/actions/loginAction.js"],"names":["LOGIN","LOGIN_ERROR","axios","login","payload","userData","type","userDetails","success","LoginAction","dispatch","getState","Promise","resolve","reject","baseUri","data","usuario","contrasena","post","then","res","esActivo","window","location","href","alert","catch","err"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,YAApB;AACA,SAAQC,WAAR,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,KAAK,GAAE,CAACC,OAAD,EAASC,QAAT,KAAoB;AAC7B,SAAM;AACFC,IAAAA,IAAI,EAAEN,KADJ;AAEFO,IAAAA,WAAW,EAAC,EAAC,GAAGH;AAAJ,KAFV;AAGFC,IAAAA,QAAQ,EAACA,QAHP;AAIFG,IAAAA,OAAO,EAAE;AAJP,GAAN;AAMH,CAPD;;AASA,OAAO,MAAMC,WAAW,GAAIL,OAAD,IAAa,CAACM,QAAD,EAAWC,QAAX,KAAsB;AAC1D,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAoB;AAEnC,UAAMC,OAAO,GAAG,uDAAhB;AAEA,UAAMC,IAAI,GAAG;AACTC,MAAAA,OAAO,EAAE,MADA;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIEhB,IAAAA,KAAK,CACFiB,IADH,CACQJ,OADR,EACiBC,IADjB,EAEGI,IAFH,CAESC,GAAD,IAAS;AACb,aAAOA,GAAG,CAACL,IAAX;AACD,KAJH,EAKGI,IALH,CAKSC,GAAD,IAAS;AACb,UAAIA,GAAG,CAACC,QAAJ,KAAiB,IAArB,EAA2B;AAC1B;AACCC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACD,OAHD,MAGO;AACLC,QAAAA,KAAK,CAAC,8DAAD,CAAL;AACD;AACF,KAZH,EAaGC,KAbH,CAaUC,GAAD,IAAS;AACdF,MAAAA,KAAK,CAAC,mCAAmCE,GAApC,CAAL;AACD,KAfH;AAgBT,GAxBU,CAAP;AAyBH,CA1BM","sourcesContent":["import {LOGIN} from '../constan';\r\nimport {LOGIN_ERROR} from '../constan';\r\nimport axios from \"axios\";\r\n\r\n/*export const LoginAction = (payload) => {\r\n    return (dispatch)=>{\r\n        //let result={...payload};\r\n        //dispatch({ type: LOGIN, payload: result });\r\n        //console.log(payload)\r\n        /*Axios.get(`https://anypoint.mulesoft.com/mocking/api/v1/sources/exchange/assets/d4788f6c-c024-43ee-8253-b139c8997e9e/usuarios/1.0.0/m/usuarios?usuario=${payload.usuario}&contrasena=${payload.contrasena}`)\r\n        Axios.get('http://jsonplaceholder.typicode.com/posts')\r\n        .then(response=>{\r\n            console.log(response.data)\r\n            dispatch({ type: LOGIN, payload: response.data });\r\n        })\r\n        .catch(error=>{\r\n            dispatch({type: LOGIN_ERROR, payload: 'No se encontro el usuario'})\r\n        });\r\n    }\r\n}*/\r\nconst login =(payload,userData)=>{\r\n    return{\r\n        type: LOGIN,\r\n        userDetails:{...payload},\r\n        userData:userData,\r\n        success: true\r\n    }\r\n}\r\n\r\nexport const LoginAction = (payload) => (dispatch, getState)=>{\r\n    return new Promise((resolve, reject) =>{\r\n \r\n        const baseUri = \"https://private-117dfb-logeo.apiary-mock.com/usuarios\";\r\n\r\n        const data = {\r\n            usuario: \"user\",\r\n            contrasena: \"pass\",\r\n          };\r\n          axios\r\n            .post(baseUri, data)\r\n            .then((res) => {\r\n              return res.data;\r\n            })\r\n            .then((res) => {\r\n              if (res.esActivo === true) {\r\n               // cookies.set(\"usuario\", res.usuario, { path: \"/\" });\r\n                window.location.href = \"./home\";\r\n              } else {\r\n                alert(\"Las credenciales son invalidas. Revisa con el administrador.\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              alert(\"Ocurrio un error de conexión: \" + err);\r\n            });\r\n});\r\n}\r\n"]},"metadata":{},"sourceType":"module"}